pragma solidity ^0.4.4;

contract Bank {
	mapping(address=>uint) public balances;
    address public payer;
    address[] public addressesToRefund;
	
    function Bank() public payable {
        payer = msg.sender;
        balances[msg.sender] = msg.value;
        addressesToRefund.push(msg.sender);
    }
	
	function signUp() public payable {
		balances[msg.sender] = msg.value;
		addressesToRefund.push(msg.sender);
	}
	
	function cashOutEveryone() public {
	    require(payer == msg.sender);
    	for (uint i=0; i< addressesToRefund.length-1; i++ ) {
    	    require(addressesToRefund[i].send(balances[addressesToRefund[i]]));
    	}
	}

	function getNumberOfAccounts() public constant returns (uint) {
		return addressesToRefund.length;
	}

}