var Reentrance = artifacts.require("./Reentrance.sol");
var ReentranceAttacker = artifacts.require("./Reentrance.sol");

contract('Reentrance', function(accounts) {

	// send funds to Reentrance account from account[0]
	it ("should be able to accept funds from user and associate user with those funds", function() {
		return Reentrance.deployed().then(function(instance) {
			ReentranceInstance = instance;
			return ReentranceInstance.deposit({from: accounts[0], value: web3.toWei(5, "ether")});
		}).then(function() {
			// get reentrance contract balance
			return web3.fromWei(web3.eth.getBalance(ReentranceInstance.address), "ether").toNumber();
		}).then(function(contractBalance) {
			// check balance after deposit
			assert.equal(contractBalance, 5, "doesn't send 5 ether");
			// get shares for deposited account
			return ReentranceInstance.getShares({from: accounts[0]});
		}).then(function(acc1Shares) {
			var acc1SharesInEther = web3.fromWei(acc1Shares, "ether");
			assert.equal(acc1SharesInEther, 5, "doesn't send 5 ether");
		});
	});
});


// e.sendTransaction({from: accounts[0], to: accounts[1], value: web3.toWei(1, "ether")})
// console.log(web3.eth.getBalance(ReentranceInstance.address).toNumber());