var Bank = artifacts.require("./Bank.sol");

function signUpAllAccounts(Bank, accounts) {
	return new Promise ((resolve, reject) => {
		
		var signUps = [];
		for (i in accounts) {
			signUps.push(Bank.signUp({from: accounts[i], value: 5}));
		}

		Promise.all(signUps).then((sigs) => {
			resolve(sigs);
		});
	});
}

contract('Bank', function(accounts) {
	it ("should be unable to pay out all the accounts I sign up", function() {
		return Bank.deployed().then(function(instance) {
			Bank = instance;
			return signUpAllAccounts(Bank, accounts);
		}).then(function() {
			return Bank.getNumberOfAccounts();
		}).then(function(numberOfAccts) {
			assert.equal(numberOfAccts, accounts.length+1);
		}).then(function() {
			// Bank.cashOutEveryone({from: accounts[0]});
		});
	});
});